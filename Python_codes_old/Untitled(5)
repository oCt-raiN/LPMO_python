{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled","provenance":[],"authorship_tag":"ABX9TyPw4LoBC2LPDuBWpdsydNgr"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"lB-jMGcRET3-"},"source":["class Magazine:\n","  def __init__(self,author,viewers,cost,name):\n","    self.author=author\n","    self.viewers=viewers\n","    self.cost=cost\n","    self.name=name\n","\n","class Publisher:\n","  def __init__(self,phouse,mcollection):\n","    self.phouse=phouse\n","    self.mcollection=mcollection\n","  def findmin(self):\n","    min_obj=min(self.mcollection x:x.viewers)\n","    return min_obj\n","  def sortmag(self):\n","    s=[]\n","    s=sorterd(self.mcollection x:x.cost)\n","    s1=[]\n","    for i in s:\n","      s1.append(i.cost)\n","    if len(s1)==0:\n","      return none\n","      else:\n","        return s1\n","\n","count=int(input())\n","mcollection=[]\n","for i in range(count):\n","  auhtor=input()\n","  viewers=int(input())\n","  cost=int(input())\n","  name=input()\n","  m=Magazine(author,viewers,cost,name)\n","  mcollection.append(m)\n","p=Publisher(\"XYZ\",mCollection)\n","x=p.\n","\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UEDSBNO6HU4Q"},"source":[""],"execution_count":null,"outputs":[]}]}